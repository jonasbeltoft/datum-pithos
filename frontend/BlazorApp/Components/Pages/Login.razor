@page "/login"
@layout EmptyLayout
@using BlazorApp.Models
@using BlazorApp.Components
@using System.Security.Claims
@using System.Text.Json
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@using System.Text.Json.Serialization
@inject CustomAuthStateProvider stateProvider

    <h1>Login</h1>

    <div class="">
        <div class="">
            <EditForm Model="@Model" OnValidSubmit="@_Login" FormName="LoginForm">
                <DataAnnotationsValidator />
                <div class="">
                    <label>Username</label>
                    <InputText @bind-Value="@Model.Username" class="form-control" placeholder="Username" />
                    <ValidationMessage For="@(() => Model.Username)" />
                </div>
                <div class="">
                    <label>Password</label>
                    <InputText @bind-Value="@Model.Password" type="password" class="form-control" placeholder="Password" />
                    <ValidationMessage For="@(() => Model.Password)" />
                </div>
                <div>
                    <span class="text-red-700">@errorMessage</span>
                </div>
                <div>
                    <button type="submit" class="btn btn-primary">Login</button>
                </div>
            </EditForm>
        </div>
    </div>

    @code {
    [SupplyParameterFromForm]
    public LoginViewModel Model { get; set; } = new();

    private string? errorMessage;

    // NavigationManager set using dependency injection
    [Inject]
    private NavigationManager? NavigationManager { get; set; }

   
    private async Task _Login() {
        

	}
    
    public class LoginResponse {
        [JsonPropertyName("display_name")]
        public string DisplayName {
            get; set;
        }
        [JsonPropertyName("role")]
        public string Role {
            get; set;
        }
    }
}
